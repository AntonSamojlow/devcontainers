# workflow that builds the linux-dev image and uploads it to some container registry

name: Publish image
on:
  workflow_dispatch:
    inputs:
      image:
        description: "Dockerfile to build and push"
        required: true
        type: choice
        options:
          # Images are organized here under ./{topic}/{imagename}.Dockerfile. We map this to:
          # - {topic}/{imagename}:latest in GAR
          # - devcontainers:{topic}-{imagename} in Docker Hub (due to one single private repo)
          - "cpp/linux"
      docker-hub:
        description: Publish to Docker Hub?
        required: true
        type: boolean
        default: true
      google-artifact-registry:
        description: Publish to Google Artifact Registry?
        required: true
        type: boolean
        default: true

jobs:
  google-artifact-registry:
    name: Build & push to Google Artifact Registry
    runs-on: ubuntu-latest
    if: inputs.google-artifact-registry
    env:
      GC_PROJECT_NUMBER: 73958267942
      GC_POOL_ID: identity-pool-alpha
      GC_PROVIDER_ID: github-actions
      GC_SERVICE_ACCOUNT_EMAIL: github-actions-devcontainers@general-396516.iam.gserviceaccount.com
      GAR_LOCATION: "europe-west3"
      GAR_PROJECT: "devcontainers-396515"
    permissions:
      id-token: "write"
      contents: "read"

    steps:
      - uses: "actions/checkout@v3"

      - name: Save image tag
        run: echo "IMAGE_AND_TAG=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GAR_PROJECT}}/${{ inputs.image }}:latest" >> $GITHUB_ENV

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1.1.0"
        with:
          token_format: "access_token"
          create_credentials_file: true
          workload_identity_provider: "projects/${{ env.GC_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.GC_POOL_ID }}/providers/${{ env.GC_PROVIDER_ID }}"
          service_account: ${{ env.GC_SERVICE_ACCOUNT_EMAIL }}

      - id: "login"
        name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Docker build
        shell: pwsh
        run: >
          docker build
          --file ${{ inputs.image }}.Dockerfile
          --tag ${{ env.IMAGE_AND_TAG }}
          (Split-Path ${{ inputs.image }}.Dockerfile -Parent)

      - name: Docker push
        shell: pwsh
        run: docker push ${{ env.IMAGE_AND_TAG }}

  docker-hub:
    name: Build & push to Docker Hub
    runs-on: ubuntu-latest
    if: inputs.docker-hub
    permissions:
      id-token: "write"
      contents: "read"

    steps:
      - uses: "actions/checkout@v3"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Docker build
        shell: pwsh
        run: >
          docker build
          --file ${{ inputs.image }}.Dockerfile
          --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/devcontainers:$("${{ inputs.image }}" -replace '/', '-')
          (Split-Path ${{ inputs.image }}.Dockerfile -Parent)

      - name: Docker push
        shell: pwsh
        run: docker push docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/devcontainers:$("${{ inputs.image }}" -replace '/', '-')
